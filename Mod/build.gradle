buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

archivesBaseName = "${mod_name}-internal-${minecraft_version}"

mixin {
	add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

minecraft {
	mappings channel: 'official', version: minecraft_version

	if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
		// This location is hardcoded in Forge and can not be changed.
		// https://github.com/MinecraftForge/MinecraftForge/blob/be1698bb1554f9c8fa2f58e32b9ab70bc4385e60/fmlloader/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModFile.java#L123
		accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
		project.logger.debug('Forge Access Transformers are enabled for this project.')
	}
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	implementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
//	implementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation project(":ModLocator")
	annotationProcessor 'org.spongepowered:mixin:0.8.4-SNAPSHOT:processor'
}

processResources {
    filesMatching('*.mixins.json') {
        expand "refmap_target": "${mod_id}."
    }
}

// FIXME the refmap isn't added to the jar on rebuilds for some reason, so we have to force recompilation every time
compileJava.outputs.upToDateWhen { false }

jar.finalizedBy('reobfJar')

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            groupId project.group
//            artifactId project.archivesBaseName
//            version project.version
//            from components.java
//        }
//    }
//
//    repositories {
//        maven {
//            url "file://" + System.getenv("local_maven")
//        }
//    }
//}
